# https://github.com/mozilla/wikimo_opsec/blob/master/Security/Guidelines/OpenSSH.mediawiki#Modern_OpenSSH_67

function f_sshdconfig {
  echo "[$i] /etc/ssh/sshd_config"

  cp "$SSHDFILE" "$SSHDFILE-$(date +%s)"

  sed -i '/HostKey.*ssh_host_dsa_key.*/d' "$SSHDFILE"
  sed -i 's/.*X11Forwarding.*/X11Forwarding yes/' "$SSHDFILE"
  sed -i 's/.*LoginGraceTime.*/LoginGraceTime 20/' "$SSHDFILE"
  sed -i 's/.*PermitRootLogin.*/PermitRootLogin no/' "$SSHDFILE"
  sed -i 's/.*KeyRegenerationInterval.*/KeyRegenerationInterval 1800/' "$SSHDFILE"
  sed -i 's/.*UsePrivilegeSeparation.*/UsePrivilegeSeparation sandbox/' "$SSHDFILE"
  sed -i 's/.*LogLevel.*/LogLevel VERBOSE/' "$SSHDFILE"
  sed -i 's/.*UseLogin.*/UseLogin no/' "$SSHDFILE"
  sed -i 's/.*Banner.*/Banner \/etc\/issue.net/' "$SSHDFILE"
  sed -i 's/.*Subsystem sftp.*/Subsystem sftp \/usr\/lib\/ssh\/sftp-server -f AUTHPRIV -l INFO/' "$SSHDFILE"

  if ! grep -q "AllowGroups" "$SSHDFILE" 2> /dev/null; then
    echo "AllowGroups $SSH_GRPS" >> "$SSHDFILE"
  fi

  if ! grep -q "MaxAuthTries" "$SSHDFILE" 2> /dev/null; then
    echo "MaxAuthTries 4" >> "$SSHDFILE"
  fi

  if ! grep -q "ClientAliveInterval" "$SSHDFILE" 2> /dev/null; then
    echo "ClientAliveInterval 300" >> "$SSHDFILE"
  fi

  if ! grep -q "ClientAliveCountMax" "$SSHDFILE" 2> /dev/null; then
    echo "ClientAliveCountMax 0" >> "$SSHDFILE"
  fi

  if ! grep -q "PermitUserEnvironment" "$SSHDFILE" 2> /dev/null; then
    echo "PermitUserEnvironment no" >> "$SSHDFILE"
  fi

  if ! grep -q "KexAlgorithms" "$SSHDFILE" 2> /dev/null; then
    echo 'KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256' >> "$SSHDFILE"
  fi

  if ! grep -q "Ciphers" "$SSHDFILE" 2> /dev/null; then
    echo 'Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes256-ctr' >> "$SSHDFILE"
  fi

  if ! grep -q "Macs" "$SSHDFILE" 2> /dev/null; then
    echo 'Macs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-sha2-512,hmac-sha2-256' >> "$SSHDFILE"
  fi

  if ! grep -q "MaxSessions" "$SSHDFILE" 2> /dev/null; then
    echo "MaxSessions 2" >> "$SSHDFILE"
  fi

  if ! grep -q "UseDNS" "$SSHDFILE" 2> /dev/null; then
    echo "UseDNS yes" >> "$SSHDFILE"
  fi

  systemctl restart sshd.service

  if [[ $VERBOSE == "Y" ]];
    then
       systemctl status sshd.service --no-pager
    echo
  fi

  ((i++))
}
